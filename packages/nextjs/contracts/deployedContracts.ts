/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  11155111: {
    AimEvaluator: {
      address: "0x9E5153EF0763AE324a3AF572Eb80Bc970aA01d24",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IAIOracle",
              name: "_aiOracle",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "contract IAIOracle",
              name: "expected",
              type: "address",
            },
            {
              internalType: "contract IAIOracle",
              name: "found",
              type: "address",
            },
          ],
          name: "UnauthorizedCallbackSource",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "updater",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "ConstitutionUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "modelId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint64",
              name: "gasLimit",
              type: "uint64",
            },
          ],
          name: "ModelSettingsUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "proposer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "proposal",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "result",
              type: "string",
            },
          ],
          name: "ProposalEvaluated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "proposer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "proposal",
              type: "string",
            },
          ],
          name: "ProposalSubmitted",
          type: "event",
        },
        {
          inputs: [],
          name: "aiOracle",
          outputs: [
            {
              internalType: "contract IAIOracle",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "output",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "callbackData",
              type: "bytes",
            },
          ],
          name: "aiOracleCallback",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "callbackGasLimit",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "clearConstitution",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "constitution",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "constitutionSet",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "estimateFee",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "proposal",
              type: "string",
            },
          ],
          name: "evaluateProposal",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "evaluationModelId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
          ],
          name: "getProposalResult",
          outputs: [
            {
              internalType: "string",
              name: "proposal",
              type: "string",
            },
            {
              internalType: "string",
              name: "result",
              type: "string",
            },
            {
              internalType: "bool",
              name: "completed",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
          ],
          name: "isFinalized",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "proposals",
          outputs: [
            {
              internalType: "address",
              name: "proposer",
              type: "address",
            },
            {
              internalType: "string",
              name: "proposal",
              type: "string",
            },
            {
              internalType: "string",
              name: "result",
              type: "string",
            },
            {
              internalType: "bool",
              name: "completed",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "newConstitution",
              type: "string",
            },
          ],
          name: "setConstitution",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "modelId",
              type: "uint256",
            },
            {
              internalType: "uint64",
              name: "gasLimit",
              type: "uint64",
            },
          ],
          name: "updateModelSettings",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        aiOracle: "lib/OAO/contracts/AIOracleCallbackReceiver.sol",
        aiOracleCallback: "lib/OAO/contracts/AIOracleCallbackReceiver.sol",
        isFinalized: "lib/OAO/contracts/AIOracleCallbackReceiver.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
